<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About FreeMove</value>
  </data>
  <data name="BlacklistedException" xml:space="preserve">
    <value>The \"{0}\" directory cannot be moved.</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="CopyFailedException" xml:space="preserve">
    <value>Exception encountered while copying directory</value>
  </data>
  <data name="DeleteFailedException" xml:space="preserve">
    <value>Exception encountered while removing duplicate files in the old location</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details:</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorDetail" xml:space="preserve">
    <value>Error details</value>
  </data>
  <data name="InvPathException" xml:space="preserve">
    <value>Invalid path</value>
  </data>
  <data name="InvPathFormatException" xml:space="preserve">
    <value>Invalid path format</value>
  </data>
  <data name="IOException" xml:space="preserve">
    <value>Unable to create the destination directory.</value>
  </data>
  <data name="MoveFailedException" xml:space="preserve">
    <value>Exception encountered while moving on the same drive</value>
  </data>
  <data name="NoDestException" xml:space="preserve">
    <value>Destination folder does not exist</value>
  </data>
  <data name="NoSourceException" xml:space="preserve">
    <value>Source folder does not exist</value>
  </data>
  <data name="NoSpaceException" xml:space="preserve">
    <value>There is not enough free space on the {0} disk. {1}MB required, {2} available.</value>
  </data>
  <data name="NoUpdate" xml:space="preserve">
    <value>There are no updates available.</value>
  </data>
  <data name="PrivilegeException" xml:space="preserve">
    <value>You do not have the required privileges to move the directory.\nTry running as administrator</value>
  </data>
  <data name="ProgressMoving" xml:space="preserve">
    <value>Moving files...</value>
  </data>
  <data name="PromptCancel" xml:space="preserve">
    <value>Are you sure you want to cancel?</value>
  </data>
  <data name="PromptDone" xml:space="preserve">
    <value>Finishing...</value>
  </data>
  <data name="PromptUndo" xml:space="preserve">
    <value>Do you want to undo the changes?</value>
  </data>
  <data name="RemoveError" xml:space="preserve">
    <value>Could not remove copied contents. Try removing manually.</value>
  </data>
  <data name="SafeCheckException" xml:space="preserve">
    <value>It's recommended not to move the {0} directory, you can disable safe mode in the Settings tab to override this check</value>
  </data>
  <data name="SameNameException" xml:space="preserve">
    <value>Destination folder already contains a folder with the same name</value>
  </data>
  <data name="SymLinkException" xml:space="preserve">
    <value>Could not create a symbolic link.\nTry running as administrator</value>
  </data>
  <data name="TipFrom" xml:space="preserve">
    <value>Select the folder you want to move</value>
  </data>
  <data name="TipHidden" xml:space="preserve">
    <value>Select whether you want to hide the shortcut which is created in the old location or not</value>
  </data>
  <data name="TipTo" xml:space="preserve">
    <value>Select where you want to move the folder</value>
  </data>
  <data name="TitleCancel" xml:space="preserve">
    <value>Cancel confirmation</value>
  </data>
  <data name="UnauthorizedAccessException" xml:space="preserve">
    <value>Lacking required permissions to create the destination directory. Try running as administrator.</value>
  </data>
  <data name="UndoError" xml:space="preserve">
    <value>Could not move back contents. Try moving manually.</value>
  </data>
  <data name="UpdateAsk" xml:space="preserve">
    <value>Open the download page?</value>
  </data>
  <data name="UpdateCurrent" xml:space="preserve">
    <value>Current version: </value>
  </data>
  <data name="UpdateLatest" xml:space="preserve">
    <value>Latest version: </value>
  </data>
  <data name="UpdateNew" xml:space="preserve">
    <value>New version available!</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>